==7102== Memcheck, a memory error detector
==7102== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7102== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==7102== Command: ./server
==7102== Parent PID: 1677
==7102== 
==7102== Thread 2:
==7102== Conditional jump or move depends on uninitialised value(s)
==7102==    at 0x10C506: leave_game (game.c:199)
==7102==    by 0x10DA6E: interact (lobby.c:53)
==7102==    by 0x10D827: handle_client (server.c:37)
==7102==    by 0x485B608: start_thread (pthread_create.c:477)
==7102==    by 0x4995132: clone (clone.S:95)
==7102== 
==7102== 
==7102== Process terminating with default action of signal 2 (SIGINT)
==7102==    at 0x48664FF: accept (accept.c:26)
==7102==    by 0x10D8E5: main (server.c:65)
==7102== 
==7102== HEAP SUMMARY:
==7102==     in use at exit: 272 bytes in 1 blocks
==7102==   total heap usage: 10 allocs, 9 frees, 11,292 bytes allocated
==7102== 
==7102== Thread 1:
==7102== 272 bytes in 1 blocks are possibly lost in loss record 1 of 1
==7102==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==7102==    by 0x40149DA: allocate_dtv (dl-tls.c:286)
==7102==    by 0x40149DA: _dl_allocate_tls (dl-tls.c:532)
==7102==    by 0x485C322: allocate_stack (allocatestack.c:622)
==7102==    by 0x485C322: pthread_create@@GLIBC_2.2.5 (pthread_create.c:660)
==7102==    by 0x10D95B: main (server.c:77)
==7102== 
==7102== LEAK SUMMARY:
==7102==    definitely lost: 0 bytes in 0 blocks
==7102==    indirectly lost: 0 bytes in 0 blocks
==7102==      possibly lost: 272 bytes in 1 blocks
==7102==    still reachable: 0 bytes in 0 blocks
==7102==         suppressed: 0 bytes in 0 blocks
==7102== 
==7102== Use --track-origins=yes to see where uninitialised values come from
==7102== For lists of detected and suppressed errors, rerun with: -s
==7102== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
